#!/usr/bin/env python3
import requests
import json
from datetime import datetime

def check_system_state(server_url="http://localhost:8000"):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ —Å–∏–º—É–ª—è—Ü–∏–∏"""
    print("üîç Checking System State After Simulation")
    print("=" * 50)
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞
        health_response = requests.get(f"{server_url}/health")
        print(f"‚úÖ Server Health: {health_response.status_code}")
        
        # 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users_response = requests.get(f"{server_url}/api/users")
        if users_response.status_code == 200:
            users_data = users_response.json()
            print(f"üë• Registered Users: {len(users_data.get('users', []))}")
            for user in users_data.get('users', []):
                print(f"   - {user['username']}")
        
        # 3. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        files_response = requests.get(f"{server_url}/api/files")
        if files_response.status_code == 200:
            files_data = files_response.json()
            print(f"üìÅ Tracked Files: {len(files_data.get('files', []))}")
        
        # 4. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏
        sessions_response = requests.get(f"{server_url}/api/sessions")
        if sessions_response.status_code == 200:
            sessions_data = sessions_response.json()
            active_sessions = [s for s in sessions_data.get('sessions', []) if s.get('ended_at') is None]
            print(f"üîÑ Active Sessions: {len(active_sessions)}")
        
        # 5. –ü–æ–ª—É—á–∞–µ–º –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ–∞–π–ª—ã
        multi_user_response = requests.get(f"{server_url}/api/multi-user-files")
        if multi_user_response.status_code == 200:
            multi_user_data = multi_user_response.json()
            multi_user_files = multi_user_data.get('multi_user_files', [])
            print(f"üë• Multi-User Files: {len(multi_user_files)}")
            
            for file_info in multi_user_files:
                editors = [editor['username'] for editor in file_info.get('editors', [])]
                print(f"   üìÑ {file_info['file_name']}")
                print(f"      Editors: {', '.join(editors)}")
                print(f"      Total editors: {file_info['editor_count']}")
        
        # 6. –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        events_response = requests.get(f"{server_url}/api/events")
        if events_response.status_code == 200:
            events_data = events_response.json()
            print(f"üì® Total Events: {len(events_data.get('events', []))}")
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ —Ç–∏–ø–∞–º
            event_types = {}
            for event in events_data.get('events', []):
                event_type = event.get('event_type', 'unknown')
                event_types[event_type] = event_types.get(event_type, 0) + 1
            
            print("   Event types:")
            for event_type, count in event_types.items():
                print(f"      {event_type}: {count}")
        
        print("\n‚úÖ System check completed!")
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Error connecting to server: {e}")
    except Exception as e:
        print(f"‚ùå Error during system check: {e}")

def test_current_editors(server_url="http://localhost:8000"):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("\nüéØ Testing Current Editors Detection")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        files_response = requests.get(f"{server_url}/api/files")
        if files_response.status_code == 200:
            files_data = files_response.json()
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
            for file_info in files_data.get('files', [])[:5]:  # –ü–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤
                file_path = file_info['path']
                
                editors_response = requests.get(f"{server_url}/api/current-editors/{file_path}")
                if editors_response.status_code == 200:
                    editors_data = editors_response.json()
                    
                    if editors_data.get('file_exists'):
                        editors = editors_data.get('current_editors', [])
                        print(f"üìÑ {file_info['name']}:")
                        print(f"   Current editors: {len(editors)}")
                        for editor in editors:
                            print(f"   - {editor['username']} (last activity: {editor['last_activity']})")
                    else:
                        print(f"üìÑ {file_info['name']}: File not found in monitoring")
                
                print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É —Ñ–∞–π–ª–∞–º–∏
        
        print("‚úÖ Current editors test completed!")
        
    except Exception as e:
        print(f"‚ùå Error testing current editors: {e}")

if __name__ == "__main__":
    check_system_state()
    test_current_editors()